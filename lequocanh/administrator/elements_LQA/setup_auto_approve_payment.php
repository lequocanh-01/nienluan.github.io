<?php
/**
 * Thi·∫øt l·∫≠p t·ª± ƒë·ªông duy·ªát ƒë∆°n h√†ng cho thanh to√°n MoMo v√† ng√¢n h√†ng
 * Script n√†y s·∫Ω:
 * 1. K√≠ch ho·∫°t t·ª± ƒë·ªông duy·ªát ƒë∆°n h√†ng ƒë√£ thanh to√°n
 * 2. Thi·∫øt l·∫≠p cron job ƒë·ªÉ x·ª≠ l√Ω t·ª± ƒë·ªông
 * 3. C·∫•u h√¨nh webhook cho MoMo
 */

require_once './mod/database.php';
require_once './mod/AutoOrderProcessor.php';

try {
    $db = Database::getInstance();
    $conn = $db->getConnection();
    
    echo "<h2>üöÄ Thi·∫øt l·∫≠p t·ª± ƒë·ªông duy·ªát thanh to√°n</h2>";
    
    // 1. Ki·ªÉm tra v√† t·∫°o c·ªôt auto_approved n·∫øu ch∆∞a c√≥
    echo "<h3>1. Ki·ªÉm tra c·∫•u tr√∫c database...</h3>";
    
    $checkColumnSql = "SHOW COLUMNS FROM don_hang LIKE 'auto_approved'";
    $checkStmt = $conn->prepare($checkColumnSql);
    $checkStmt->execute();
    
    if ($checkStmt->rowCount() == 0) {
        echo "‚ûï Th√™m c·ªôt auto_approved v√†o b·∫£ng don_hang...<br>";
        $addColumnSql = "ALTER TABLE don_hang ADD COLUMN auto_approved TINYINT(1) DEFAULT 0 AFTER trang_thai";
        $conn->exec($addColumnSql);
        echo "‚úÖ ƒê√£ th√™m c·ªôt auto_approved<br>";
    } else {
        echo "‚úÖ C·ªôt auto_approved ƒë√£ t·ªìn t·∫°i<br>";
    }
    
    // 2. Ki·ªÉm tra v√† t·∫°o b·∫£ng c·∫•u h√¨nh n·∫øu ch∆∞a c√≥
    echo "<h3>2. Thi·∫øt l·∫≠p b·∫£ng c·∫•u h√¨nh...</h3>";
    
    $createConfigTableSql = "CREATE TABLE IF NOT EXISTS system_config (
        id INT AUTO_INCREMENT PRIMARY KEY,
        config_key VARCHAR(100) NOT NULL UNIQUE,
        config_value TEXT,
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci";
    
    $conn->exec($createConfigTableSql);
    echo "‚úÖ B·∫£ng system_config ƒë√£ s·∫µn s√†ng<br>";
    
    // 3. Thi·∫øt l·∫≠p c·∫•u h√¨nh t·ª± ƒë·ªông duy·ªát
    echo "<h3>3. C·∫•u h√¨nh t·ª± ƒë·ªông duy·ªát...</h3>";
    
    $configs = [
        [
            'key' => 'auto_approve_paid_orders',
            'value' => '1',
            'description' => 'T·ª± ƒë·ªông duy·ªát ƒë∆°n h√†ng ƒë√£ thanh to√°n (1=b·∫≠t, 0=t·∫Øt)'
        ],
        [
            'key' => 'auto_approve_momo',
            'value' => '1',
            'description' => 'T·ª± ƒë·ªông duy·ªát thanh to√°n MoMo (1=b·∫≠t, 0=t·∫Øt)'
        ],
        [
            'key' => 'auto_approve_bank_transfer',
            'value' => '1',
            'description' => 'T·ª± ƒë·ªông duy·ªát chuy·ªÉn kho·∫£n ng√¢n h√†ng (1=b·∫≠t, 0=t·∫Øt)'
        ],
        [
            'key' => 'auto_process_interval',
            'value' => '300',
            'description' => 'Kho·∫£ng th·ªùi gian x·ª≠ l√Ω t·ª± ƒë·ªông (gi√¢y)'
        ]
    ];
    
    foreach ($configs as $config) {
        $insertConfigSql = "INSERT INTO system_config (config_key, config_value, description) 
                           VALUES (?, ?, ?) 
                           ON DUPLICATE KEY UPDATE 
                           config_value = VALUES(config_value),
                           description = VALUES(description),
                           updated_at = NOW()";
        
        $stmt = $conn->prepare($insertConfigSql);
        $stmt->execute([$config['key'], $config['value'], $config['description']]);
        echo "‚úÖ C·∫•u h√¨nh {$config['key']}: {$config['value']}<br>";
    }
    
    // 4. Test t·ª± ƒë·ªông duy·ªát
    echo "<h3>4. Test t·ª± ƒë·ªông duy·ªát...</h3>";
    
    $processor = new AutoOrderProcessor();
    $result = $processor->autoApprovePaymentConfirmedOrders();
    
    if ($result['success']) {
        echo "‚úÖ " . $result['message'] . "<br>";
    } else {
        echo "‚ö†Ô∏è " . $result['message'] . "<br>";
    }
    
    // 5. Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n thi·∫øt l·∫≠p cron job
    echo "<h3>5. Thi·∫øt l·∫≠p Cron Job</h3>";
    echo "<div style='background: #f5f5f5; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
    echo "<p><strong>ƒê·ªÉ t·ª± ƒë·ªông x·ª≠ l√Ω ƒë∆°n h√†ng, th√™m cron job sau v√†o server:</strong></p>";
    echo "<code>*/5 * * * * /usr/bin/php " . __DIR__ . "/cron/auto_process_orders.php</code><br>";
    echo "<p><em>Cron job n√†y s·∫Ω ch·∫°y m·ªói 5 ph√∫t ƒë·ªÉ t·ª± ƒë·ªông duy·ªát ƒë∆°n h√†ng ƒë√£ thanh to√°n</em></p>";
    echo "</div>";
    
    // 6. Hi·ªÉn th·ªã webhook URLs
    echo "<h3>6. Webhook URLs cho MoMo</h3>";
    echo "<div style='background: #e8f5e8; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
    echo "<p><strong>Notify URL:</strong> " . $_SERVER['HTTP_HOST'] . "/lequocanh/payment/notify.php</p>";
    echo "<p><strong>Return URL:</strong> " . $_SERVER['HTTP_HOST'] . "/lequocanh/payment/return.php</p>";
    echo "<p><em>C·∫•u h√¨nh c√°c URL n√†y trong t√†i kho·∫£n MoMo c·ªßa b·∫°n</em></p>";
    echo "</div>";
    
    // 7. Hi·ªÉn th·ªã tr·∫°ng th√°i hi·ªán t·∫°i
    echo "<h3>7. Tr·∫°ng th√°i ƒë∆°n h√†ng hi·ªán t·∫°i</h3>";
    
    $statusSql = "SELECT 
                    trang_thai,
                    trang_thai_thanh_toan,
                    phuong_thuc_thanh_toan,
                    COUNT(*) as count
                  FROM don_hang 
                  GROUP BY trang_thai, trang_thai_thanh_toan, phuong_thuc_thanh_toan
                  ORDER BY trang_thai, phuong_thuc_thanh_toan";
    
    $statusStmt = $conn->prepare($statusSql);
    $statusStmt->execute();
    $statusData = $statusStmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>Tr·∫°ng th√°i ƒë∆°n h√†ng</th><th>Tr·∫°ng th√°i thanh to√°n</th><th>Ph∆∞∆°ng th·ª©c</th><th>S·ªë l∆∞·ª£ng</th></tr>";
    
    foreach ($statusData as $row) {
        echo "<tr>";
        echo "<td>" . htmlspecialchars($row['trang_thai']) . "</td>";
        echo "<td>" . htmlspecialchars($row['trang_thai_thanh_toan']) . "</td>";
        echo "<td>" . htmlspecialchars($row['phuong_thuc_thanh_toan']) . "</td>";
        echo "<td>" . $row['count'] . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    
    echo "<h3>‚úÖ Thi·∫øt l·∫≠p ho√†n t·∫•t!</h3>";
    echo "<p>H·ªá th·ªëng t·ª± ƒë·ªông duy·ªát ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t. C√°c ƒë∆°n h√†ng thanh to√°n qua MoMo v√† chuy·ªÉn kho·∫£n ng√¢n h√†ng s·∫Ω ƒë∆∞·ª£c t·ª± ƒë·ªông duy·ªát khi nh·∫≠n ƒë∆∞·ª£c x√°c nh·∫≠n thanh to√°n.</p>";
    
} catch (Exception $e) {
    echo "<h3>‚ùå L·ªói thi·∫øt l·∫≠p</h3>";
    echo "<p style='color: red;'>L·ªói: " . $e->getMessage() . "</p>";
    error_log("Setup auto approve error: " . $e->getMessage());
}
?>

<style>
body { font-family: Arial, sans-serif; margin: 20px; }
h2 { color: #2c5aa0; }
h3 { color: #5a5a5a; margin-top: 25px; }
table { margin: 10px 0; }
th { background: #f0f0f0; padding: 8px; }
td { padding: 8px; }
code { background: #f5f5f5; padding: 2px 5px; border-radius: 3px; }
</style>
