<?php
require_once 'elements_LQA/mod/database.php';

echo "<h2>Nh·∫≠p kho h√†ng lo·∫°t - Th√™m 10 ƒë∆°n v·ªã cho m·ªói s·∫£n ph·∫©m</h2>";

try {
    $db = Database::getInstance()->getConnection();
    $db->beginTransaction();

    // 1. L·∫•y danh s√°ch t·∫•t c·∫£ h√†ng h√≥a
    echo "<h3>1. L·∫•y danh s√°ch h√†ng h√≥a...</h3>";
    $sql = "SELECT idhanghoa, tenhanghoa, giathamkhao FROM hanghoa ORDER BY idhanghoa";
    $stmt = $db->prepare($sql);
    $stmt->execute();
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<p>T√¨m th·∫•y " . count($products) . " s·∫£n ph·∫©m c·∫ßn nh·∫≠p kho.</p>";
    
    if (count($products) == 0) {
        echo "<p style='color: orange;'>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ nh·∫≠p kho.</p>";
        exit;
    }

    // 2. T·∫°o phi·∫øu nh·∫≠p
    echo "<h3>2. T·∫°o phi·∫øu nh·∫≠p...</h3>";
    $maPhieuNhap = "PN_" . date("YmdHis"); // M√£ phi·∫øu nh·∫≠p duy nh·∫•t
    $ngayNhap = date("Y-m-d H:i:s");
    $idNhanVien = 3; // ID nh√¢n vi√™n t·ª´ database
    $idNCC = 1; // ID nh√† cung c·∫•p t·ª´ database
    $ghiChu = "Nh·∫≠p kho h√†ng lo·∫°t - Th√™m 10 ƒë∆°n v·ªã cho m·ªói s·∫£n ph·∫©m";
    
    $sqlPhieuNhap = "INSERT INTO phieunhap (maPhieuNhap, ngayNhap, idNhanVien, idNCC, ghiChu, trangThai) 
                     VALUES (?, ?, ?, ?, ?, 1)";
    $stmtPhieuNhap = $db->prepare($sqlPhieuNhap);
    $stmtPhieuNhap->execute([$maPhieuNhap, $ngayNhap, $idNhanVien, $idNCC, $ghiChu]);
    
    $idPhieuNhap = $db->lastInsertId();
    echo "<p style='color: green;'>‚úÖ T·∫°o phi·∫øu nh·∫≠p th√†nh c√¥ng. M√£ phi·∫øu: <strong>$maPhieuNhap</strong>, ID: $idPhieuNhap</p>";

    // 3. Th√™m chi ti·∫øt phi·∫øu nh·∫≠p v√† c·∫≠p nh·∫≠t t·ªìn kho
    echo "<h3>3. X·ª≠ l√Ω t·ª´ng s·∫£n ph·∫©m...</h3>";
    $tongTien = 0;
    $soLuongNhap = 10; // S·ªë l∆∞·ª£ng nh·∫≠p cho m·ªói s·∫£n ph·∫©m
    $processedCount = 0;
    $errorCount = 0;
    
    foreach ($products as $product) {
        try {
            $idhanghoa = $product['idhanghoa'];
            $tenhanghoa = $product['tenhanghoa'];
            $giathamkhao = $product['giathamkhao'];
            
            // Gi√° nh·∫≠p = 80% gi√° b√°n ƒë·ªÉ c√≥ l·ª£i nhu·∫≠n h·ª£p l√Ω
            $giaNhap = $giathamkhao * 0.8;
            $thanhTien = $giaNhap * $soLuongNhap;
            
            // 3.1. Th√™m chi ti·∫øt phi·∫øu nh·∫≠p
            $sqlCTPN = "INSERT INTO chitietphieunhap (idPhieuNhap, idhanghoa, soLuong, donGia, giaNhap, thanhTien) 
                        VALUES (?, ?, ?, ?, ?, ?)";
            $stmtCTPN = $db->prepare($sqlCTPN);
            $stmtCTPN->execute([
                $idPhieuNhap, 
                $idhanghoa, 
                $soLuongNhap, 
                $giathamkhao, // donGia = gi√° b√°n
                $giaNhap,     // giaNhap = gi√° nh·∫≠p
                $thanhTien
            ]);
            
            // 3.2. C·∫≠p nh·∫≠t t·ªìn kho
            // Ki·ªÉm tra xem ƒë√£ c√≥ b·∫£n ghi t·ªìn kho ch∆∞a
            $sqlCheckTonKho = "SELECT idTonKho, soLuong FROM tonkho WHERE idhanghoa = ?";
            $stmtCheck = $db->prepare($sqlCheckTonKho);
            $stmtCheck->execute([$idhanghoa]);
            $existingStock = $stmtCheck->fetch(PDO::FETCH_ASSOC);
            
            if ($existingStock) {
                // C·∫≠p nh·∫≠t t·ªìn kho hi·ªán t·∫°i
                $soLuongMoi = $existingStock['soLuong'] + $soLuongNhap;
                $sqlUpdateTonKho = "UPDATE tonkho SET soLuong = ?, ngayCapNhat = CURRENT_TIMESTAMP WHERE idhanghoa = ?";
                $stmtUpdate = $db->prepare($sqlUpdateTonKho);
                $stmtUpdate->execute([$soLuongMoi, $idhanghoa]);
                
                echo "<small>‚úÖ ID $idhanghoa - '$tenhanghoa': T·ªìn kho {$existingStock['soLuong']} ‚Üí $soLuongMoi (+$soLuongNhap)</small><br>";
            } else {
                // T·∫°o m·ªõi b·∫£n ghi t·ªìn kho
                $sqlInsertTonKho = "INSERT INTO tonkho (idhanghoa, soLuong, soLuongToiThieu, ngayCapNhat) VALUES (?, ?, 10, CURRENT_TIMESTAMP)";
                $stmtInsert = $db->prepare($sqlInsertTonKho);
                $stmtInsert->execute([$idhanghoa, $soLuongNhap]);
                
                echo "<small>‚úÖ ID $idhanghoa - '$tenhanghoa': T·∫°o m·ªõi t·ªìn kho v·ªõi s·ªë l∆∞·ª£ng $soLuongNhap</small><br>";
            }
            
            // 3.3. Ghi l·ªãch s·ª≠ t·ªìn kho (n·∫øu b·∫£ng c√≥ s·∫µn)
            try {
                $sqlLichSu = "INSERT INTO tonkho_lichsu (idhanghoa, soLuongTruoc, soLuongSau, soLuongThayDoi, loaiThayDoi, lyDoThayDoi, ngayThayDoi, idPhieuNhap) 
                             VALUES (?, ?, ?, ?, 'NHAP', 'Nh·∫≠p kho h√†ng lo·∫°t', CURRENT_TIMESTAMP, ?)";
                $stmtLichSu = $db->prepare($sqlLichSu);
                $soLuongTruoc = $existingStock ? $existingStock['soLuong'] : 0;
                $soLuongSau = $soLuongTruoc + $soLuongNhap;
                $stmtLichSu->execute([$idhanghoa, $soLuongTruoc, $soLuongSau, $soLuongNhap, $idPhieuNhap]);
            } catch (Exception $e) {
                // B·ªè qua l·ªói l·ªãch s·ª≠ n·∫øu b·∫£ng kh√¥ng t·ªìn t·∫°i ho·∫∑c c√≥ v·∫•n ƒë·ªÅ
                echo "<small style='color: orange;'>‚ö†Ô∏è Kh√¥ng th·ªÉ ghi l·ªãch s·ª≠ cho s·∫£n ph·∫©m ID $idhanghoa</small><br>";
            }
            
            $tongTien += $thanhTien;
            $processedCount++;
            
        } catch (Exception $e) {
            $errorCount++;
            echo "<small style='color: red;'>‚ùå L·ªói x·ª≠ l√Ω s·∫£n ph·∫©m ID {$product['idhanghoa']}: " . $e->getMessage() . "</small><br>";
        }
    }
    
    // 4. C·∫≠p nh·∫≠t t·ªïng ti·ªÅn phi·∫øu nh·∫≠p
    echo "<h3>4. Ho√†n t·∫•t phi·∫øu nh·∫≠p...</h3>";
    $sqlUpdateTongTien = "UPDATE phieunhap SET tongTien = ? WHERE idPhieuNhap = ?";
    $stmtUpdateTongTien = $db->prepare($sqlUpdateTongTien);
    $stmtUpdateTongTien->execute([$tongTien, $idPhieuNhap]);
    
    // Commit transaction
    $db->commit();
    
    echo "<div style='border: 2px solid green; padding: 15px; background-color: #f0fff0; margin: 20px 0;'>";
    echo "<h3 style='color: green; margin-top: 0;'>üéâ NH·∫¨P KHO TH√ÄNH C√îNG!</h3>";
    echo "<p><strong>Phi·∫øu nh·∫≠p:</strong> $maPhieuNhap (ID: $idPhieuNhap)</p>";
    echo "<p><strong>S·ªë s·∫£n ph·∫©m x·ª≠ l√Ω:</strong> $processedCount/$" . count($products) . "</p>";
    echo "<p><strong>S·ªë s·∫£n ph·∫©m l·ªói:</strong> $errorCount</p>";
    echo "<p><strong>T·ªïng ti·ªÅn nh·∫≠p:</strong> " . number_format($tongTien, 0, ',', '.') . " VNƒê</p>";
    echo "<p><strong>S·ªë l∆∞·ª£ng nh·∫≠p m·ªói s·∫£n ph·∫©m:</strong> $soLuongNhap ƒë∆°n v·ªã</p>";
    echo "<p><strong>Ng√†y nh·∫≠p:</strong> $ngayNhap</p>";
    echo "</div>";
    
    echo "<h3>5. Th·ªëng k√™ t·ªìn kho sau khi nh·∫≠p:</h3>";
    $sqlThongKe = "SELECT COUNT(*) as total_products, SUM(soLuong) as total_stock FROM tonkho WHERE soLuong > 0";
    $stmtThongKe = $db->prepare($sqlThongKe);
    $stmtThongKe->execute();
    $thongKe = $stmtThongKe->fetch(PDO::FETCH_ASSOC);
    
    echo "<p><strong>T·ªïng s·ªë s·∫£n ph·∫©m c√≥ t·ªìn kho:</strong> " . $thongKe['total_products'] . "</p>";
    echo "<p><strong>T·ªïng s·ªë l∆∞·ª£ng t·ªìn kho:</strong> " . number_format($thongKe['total_stock']) . " ƒë∆°n v·ªã</p>";

} catch (Exception $e) {
    // Rollback n·∫øu c√≥ l·ªói
    if ($db->inTransaction()) {
        $db->rollback();
    }
    echo "<div style='border: 2px solid red; padding: 15px; background-color: #fff0f0; margin: 20px 0;'>";
    echo "<h3 style='color: red; margin-top: 0;'>‚ùå L·ªñI NH·∫¨P KHO!</h3>";
    echo "<p><strong>Chi ti·∫øt l·ªói:</strong> " . $e->getMessage() . "</p>";
    echo "<p>To√†n b·ªô thao t√°c ƒë√£ ƒë∆∞·ª£c h·ªßy b·ªè ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh nh·∫•t qu√°n d·ªØ li·ªáu.</p>";
    echo "</div>";
}

echo "<hr>";
echo "<p><a href='../../index.php'>‚Üê Quay l·∫°i trang ch·ªß</a> | <a href='index.php?req=tonkhoview'>Xem t·ªìn kho</a></p>";
?>
